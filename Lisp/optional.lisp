(require "PATH" "path.lisp")
(require "ZOS-PATH" "zos-path.lisp")
(require "QUERY" "query.lisp")
(require "FRAGMENT" "fragment.lisp")

(provide "OPTIONAL")

(defun optional-recognize (l &optional (zos-flag NIL))
  (cond ((stringp l) (optional-recognize (coerce l 'list) zos-flag))
        ((listp l) (optional-accept l zos-flag))
  )
)

(defun optional-accept (l zos-flag)
    (cond ((null l) (list NIL NIL NIL))
          ((char= (car l) #\?) 
           (append (list NIL) 
                   (query-recognize (cdr l))))
          ((char= (car l) #\#) 
           (append (list NIL NIL) 
                   (fragment-recognize (cdr l))))
          (T (if zos-flag (zos_path-recognize l) 
               (path-recognize l)))
    )
  )